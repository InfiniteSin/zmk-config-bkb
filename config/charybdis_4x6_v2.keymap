/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define BASE 0
#define GAME 1
#define NAV 2
#define SYMBOLS 3
#define NUMBERS 4
#define SPECIAL 5

#define LAUNCHER (LG(TAB))
#define CTRL_TAB (LC(TAB))
#define C_S_TAB (LC(LS(TAB)))

#define SPC_PREVIOUS (LC(LG(LEFT)))
#define S_PRV SPC_PREVIOUS

#define SPC_NEXT (LC(LG(RIGHT)))
#define S_NXT SPC_NEXT

&sk {
  release-after-ms = <2000>;
  quick-release;
};

/ {

  chosen {
    zmk,battery = &vbatt;
  };

  vbatt: vbatt {
      compatible = "zmk,battery-nrf-vddh";
      label = "VBATT";
  };
/*
 *  conditional_layers {
 *      compatible = "zmk,conditional-layers";
 *      tri_layer {
 *          if-layers = <2 3>;
 *          then-layer = <4>;
 *      };
 *  };
*/

  behaviors {
      td0: tap_dance_smart_shift {
          compatible = "zmk,behavior-tap-dance";
          label = "TAP_DANCE_SMART_SHIFT";
          #binding-cells = <0>;
          tapping-term-ms = <200>;
          bindings = <&sk LSHIFT>, <&caps_word>;
      };
  };

  keymap {
    compatible = "zmk,keymap";

    default_layer {
      bindings = <
      &kp      ESC &kp       N1 &kp       N2 &kp       N3 &kp       N4 &kp       N5                 &kp       N6 &kp       N7 &kp       N8 &kp       N9 &kp       N0 &kp      DEL
      &kp      TAB &kp        Q &kp        W &kp        F &kp        P &kp        B                 &kp        J &kp        L &kp        U &kp        Y &kp    UNDER &kp     BSPC
      &kp    LCTRL &kp        A &kp        R &kp        S &kp        T &kp        G                 &kp        M &kp        N &kp        E &kp        I &kp        O &kp    ENTER
      &kp   LSHIFT &kp        Z &kp        X &kp        C &kp        D &kp        V                 &kp        K &kp        H &kp    COMMA &kp   PERIOD &kp     APOS &kp    RSHFT
                                             &mo      NAV &kp    SPACE &mo  NUMBERS                 &mo  NUMBERS &mo  SYMBOLS
                                                          &td0         &key_repeat                  &td0
      >;
    };

    game_layer {
      bindings = <
      &kp      ESC &kp       N1 &kp       N2 &kp       N3 &kp       N4 &kp       N5                 &kp       N6 &kp       N7 &kp       N8 &kp       N9 &kp       N0 &kp      DEL
      &kp        T &kp      TAB &kp        Q &kp        W &kp        E &kp        R                 &kp        Y &kp        U &kp        I &kp        O &kp        P &kp     BSPC
      &kp        G &kp   LSHIFT &kp        A &kp        S &kp        D &kp        F                 &kp        H &kp        J &kp        K &kp        L &kp     SEMI &kp    ENTER
      &kp        B &kp    LCTRL &kp        Z &kp        X &kp        C &kp        V                 &kp        M &kp        N &kp    COMMA &kp   PERIOD &kp    SLASH &kp    RSHFT
                                             &mo      NAV &kp    SPACE &mo  NUMBERS                 &mo  NUMBERS &mo  SYMBOLS
                                                          &td0         &key_repeat                  &td0
      >;
    };

    nav_layer {
      bindings = <
      &trans       &trans       &trans       &trans       &trans       &trans                       &trans       &trans       &trans       &trans       &trans       &trans
      &trans       &sl  SPECIAL &kp  C_S_TAB &kp      TAB &kp CTRL_TAB &none                        &none        &kp     HOME &kp       UP &kp      END &kp      DEL &trans
      &trans       &sk     LALT &sk   LSHIFT &sk    LCTRL &sk     LGUI &none                        &kp     BSPC &kp     LEFT &kp     DOWN &kp    RIGHT &kp    ENTER &trans
      &trans       &kp    LG(C) &kp    S_PRV &kp LAUNCHER &kp    S_NXT &kp    LG(V)                 &none        &none        &none        &none        &none        &trans
                                             &trans       &trans       &trans                       &trans       &trans
                                                          &trans       &trans                       &trans
      >;
    };

    symbols_layer {
      bindings = <
      &trans       &trans       &trans       &trans       &trans       &trans                       &trans       &trans       &trans       &trans       &trans       &trans
      &trans       &kp      ESC &kp    PRCNT &kp    QMARK &kp    COLON &kp       AT                 &kp    CARET &kp     LPAR &kp     SEMI &kp     RPAR &sl  SPECIAL &trans
      &trans       &kp     EXCL &kp     PLUS &kp    MINUS &kp    EQUAL &kp     HASH                 &kp    UNDER &sk     LGUI &sk    LCTRL &sk   LSHIFT &sk     LALT &trans
      &trans       &kp    TILDE &kp   DOLLAR &kp    ASTRK &kp    SLASH &kp     AMPS                 &kp     PIPE &kp     LBRC &kp     BSLH &kp     RBRC &kp    GRAVE &trans
                                             &trans       &trans       &trans                       &trans       &trans
                                                          &trans       &trans                       &trans
      >;
    };

    numbers_layer {
      bindings = <
      &kp       F1 &kp       F2 &kp       F3 &kp       F4 &kp       F5 &kp       F6                 &kp       F7 &kp       F8 &kp       F9 &kp      F10 &kp      F11 &kp      F12
      &trans       &none        &kp       N7 &kp       N8 &kp       N9 &none                        &none        &none        &none        &none        &none        &trans
      &trans       &none        &kp       N4 &kp       N5 &kp       N6 &none                        &none        &kp     LGUI &kp    LCTRL &kp   LSHIFT &kp     LALT &trans
      &trans       &none        &kp       N1 &kp       N2 &kp       N3 &none                        &none        &kp     LBKT &kp       N0 &kp     RBKT &none        &trans
                                             &trans       &trans       &trans                       &trans       &kp       N0
                                                          &trans       &trans                       &trans
      >;
    };

    special_layer {
      bindings = <
      &to BASE     &to GAME     &trans       &trans       &trans       &trans                       &trans       &trans       &trans       &trans       &to GAME     &to BASE
      &trans       &none        &bt BT_SEL 3 &bt BT_SEL 2 &bt BT_SEL 1 &bt BT_SEL 0                 &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &none        &trans
      &trans       &none        &none        &none        &none        &none                        &none        &none        &none        &none        &none        &trans
      &trans       &none        &bt   BT_PRV &bt   BT_CLR &bt   BT_NXT &bootloader                  &bootloader  &bt   BT_PRV &bt   BT_CLR &bt   BT_NXT &none        &trans
                                             &kp LAUNCHER &trans       &trans                       &kp LAUNCHER &trans
                                                          &trans       &trans                       &trans
      >;
    };

  };

};